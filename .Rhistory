counts[,1]
counts <- Matrix::readMM(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz")) # load in counts matrix
counts[,1]
counts <- readr::read_csv(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz"))) # load in counts matrix
counts <- as.data.frame(readr::read_csv(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz"))) # load in counts matrix
counts[,1]
system.file("extdata",'SpatialRNA/VisiumVignette',package = 'spacexr')
datadir <- "G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3286-RL-BF-DREADD(Gq)_R-Hemi_qc001_SI-TT-A1_w_mCherry\\outs"
counts <- ReadMtx(
mtx = file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz",
features = file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz",
cells = file.path(datadir,"/filtered_feature_bc_matrix\\barcodes.tsv.gz")
View(counts)
counts <- ReadMtx(
mtx = file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz",
features = file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz",
cells = file.path(datadir,"/filtered_feature_bc_matrix\\barcodes.tsv.gz"))
View(counts)
View(counts)
View(counts)
counts <- ReadMtx(
mtx = file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz",
features = file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz",
cells = file.path(datadir,"/filtered_feature_bc_matrix\\barcodes.tsv.gz"))
counts <- ReadMtx(
counts <- ReadMtx(
mtx = file.path(datadir,"filtered_feature_bc_matrix\\matrix.mtx.gz",
features = file.path(datadir,"filtered_feature_bc_matrix\\features.tsv.gz",
cells = file.path(datadir,"filtered_feature_bc_matrix\\barcodes.tsv.gz"))
counts <- ReadMtx(
datadir <- "G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3286-RL-BF-DREADD(Gq)_R-Hemi_qc001_SI-TT-A1_w_mCherry\\outs"
counts <- ReadMtx(
mtx = file.path(datadir,"filtered_feature_bc_matrix\\matrix.mtx.gz",
features = file.path(datadir,"filtered_feature_bc_matrix\\features.tsv.gz",
cells = file.path(datadir,"filtered_feature_bc_matrix\\barcodes.tsv.gz"))
counts <- ReadMtx(
counts <- ReadMtx(
mtx = file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz",
features = file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz",
cells = file.path(datadir,"/filtered_feature_bc_matrix\\barcodes.tsv.gz"))
counts <- as.data.frame(readr::read_csv(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz"))) # load in counts matrix
library(spacexr)
library(Matrix)
library(doParallel)
library(ggplot2)
datadir <- "G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3286-RL-BF-DREADD(Gq)_R-Hemi_qc001_SI-TT-A1_w_mCherry\\outs"
counts <- as.data.frame(readr::read_csv(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz"))) # load in counts matrix
View(counts)
View(counts)
View(counts)
counts <- Matrix::readMM(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz")) # load in counts matrix
View(counts)
View(counts)
counts[,1]
count_cell_types()
counts
coords <- read.csv(file.path(datadir,"/spatial//coords.csv"))
coords[,1]
View(counts)
head(counts)
counts <- Matrix::readMM(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz")) # load in counts matrix
counts <- as.matrix(counts)
View(counts)
View(counts)
counts <- as.data.frame(as.matrix(counts))
counts <- Matrix::readMM(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz")) # load in counts matrix
counts <- as.data.frame(as.matrix(counts))
View(counts)
View(counts)
temp <- read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz")
temp <- readr::read_tsv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz")
temp <- readr::read_tsv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz")
temp <- readr::read_tsv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"))
temp <- readr::read_tsv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"))
temp <- read_tsv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz")
View(temp)
View(temp)
View(temp)
View(temp)
View(temp)
temp <- read.table(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz")
View(temp)
temp <- as.data.frame(fread(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz")))
temp <- read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "/t")
temp <- read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t")
library(spacexr)
library(Matrix)
library(doParallel)
library(ggplot2)
datadir <- "G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3286-RL-BF-DREADD(Gq)_R-Hemi_qc001_SI-TT-A1_w_mCherry\\outs"
counts <- Matrix::readMM(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz"))
counts <- as.data.frame(as.matrix(counts))
temp <- read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t")
View(temp)
View(temp)
temp[,2]
temp <- read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE)
View(temp)
rownames(counts) <- temp[,2]
temp <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
rownames(counts) <- temp[,2]
View(temp)
View(temp)
rownames(counts)
rownames(counts) <- temp[,2]
View(temp)
View(temp)
nuniquefeatures[,2])
uniquefeatures[,2])
unique(features[,2])
features <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
rownames(counts) <- features[,2]
features <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
unique(features[,2])
length(unique(features[,2]))
length(features[,2])
View(counts)
features <- read_tsv("filtered_feature_bc_matrix\\matrix.mtx.gz\\features.tsv.gz", col_names = FALSE)
features <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
features <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
rownames(counts) <- features$X1
View(features)
View(features)
rownames(counts)
features$V2
rownames(counts) <- features$V2
length(features$V2)
length(unique(features$V2))
length(unique(features$V1))
# load features (genes) and set to row names for RCTD
features <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
rownames(counts) <- features$V1
rownames(counts)
coords <- read.csv(file.path(datadir,"/spatial//coords.csv"))
rownames(coords) <- coords[,1]; coords[,1] <- NULL
View(coords)
View(counts)
barcodes <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\barcodes.tsv.gz"),sep = "\t",header=FALSE))
colnames(counts) <- barcodes$V1
View(counts)
nUMI <- colSums(counts) # In this case, total counts per pixel is nUMI
puck <- SpatialRNA(coords, counts, nUMI)
barcodes <- colnames(puck@counts) # pixels to be used (a list of barcode names).
plot_puck_continuous(puck, barcodes, puck@nUMI, ylimit = c(0,round(quantile(puck@nUMI,0.9))), title ='plot of nUMI')
setwd(datadir)
datadir <- "G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3286-RL-BF-DREADD(Gq)_R-Hemi_qc004_SI-TT-A1_w_mCherry\\outs"
setwd(datadir)
datadir <- "G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3286-RL-BF-DREADD(Gq)_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs"
setwd(datadir)
datadir <- "G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs"
setwd(datadir)
# load in counts matrix and convert from sparse to dense dataframe
counts <- Matrix::readMM(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz"))
counts <- as.data.frame(as.matrix(counts))
# load features (genes) and set to row names for RCTD
features <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
rownames(counts) <- features$V1
# load barcodes (cells) and set to columns for RCTD
barcodes <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\barcodes.tsv.gz"),sep = "\t",header=FALSE))
colnames(counts) <- barcodes$V1
# load spatial coordinates
coords <- read.csv(file.path(datadir,"/spatial//coords.csv"))
counts <- Matrix::readMM(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz"))
counts <- as.data.frame(as.matrix(counts))
# load features (genes) and set to row names for RCTD
features <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
rownames(counts) <- features$V1
# load barcodes (cells) and set to columns for RCTD
barcodes <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\barcodes.tsv.gz"),sep = "\t",header=FALSE))
colnames(counts) <- barcodes$V1
# load spatial coordinates
coords <- read.csv(file.path(datadir,"/spatial//coords.csv"))
# load in counts matrix and convert from sparse to dense dataframe
counts <- Matrix::readMM(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz"))
counts <- as.data.frame(as.matrix(counts))
# load features (genes) and set to row names for RCTD
features <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
rownames(counts) <- features$V1
# load barcodes (cells) and set to columns for RCTD
barcodes <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\barcodes.tsv.gz"),sep = "\t",header=FALSE))
colnames(counts) <- barcodes$V1
# load spatial coordinates
coords <- read.csv(file.path(datadir,"/spatial//coords.csv"))
rownames(coords) <- coords[,1]; coords[,1] <- NULL
nUMI <- colSums(counts) # In this case, total counts per pixel is nUMI
puck <- SpatialRNA(coords, counts, nUMI)
barcodes <- colnames(puck@counts) # pixels to be used (a list of barcode names).
plot_puck_continuous(puck, barcodes, puck@nUMI, ylimit = c(0,round(quantile(puck@nUMI,0.9))), title ='plot of nUMI')
counts <- Matrix::readMM(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz"))
counts <- as.data.frame(as.matrix(counts))
# load features (genes) and set to row names for RCTD
features <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
rownames(counts) <- features$V1
# load barcodes (cells) and set to columns for RCTD
barcodes <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\barcodes.tsv.gz"),sep = "\t",header=FALSE))
colnames(counts) <- barcodes$V1
# load spatial coordinates
coords <- read.csv(file.path(datadir,"/spatial//coords.csv"))
rownames(coords) <- coords[,1]; coords[,1] <- NULL
nUMI <- colSums(counts) # In this case, total counts per pixel is nUMI
puck <- SpatialRNA(coords, counts, nUMI)
barcodes <- colnames(puck@counts) # pixels to be used (a list of barcode names).
plot_puck_continuous(puck, barcodes, puck@nUMI, size = 0.3, ylimit = c(0,round(quantile(puck@nUMI,0.9))), title ='plot of nUMI')
counts <- Matrix::readMM(file.path(datadir,"/filtered_feature_bc_matrix\\matrix.mtx.gz"))
counts <- as.data.frame(as.matrix(counts))
# load features (genes) and set to row names for RCTD
features <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\features.tsv.gz"),sep = "\t",header=FALSE))
rownames(counts) <- features$V1
# load barcodes (cells) and set to columns for RCTD
barcodes <- as.data.frame(read.csv(file.path(datadir,"/filtered_feature_bc_matrix\\barcodes.tsv.gz"),sep = "\t",header=FALSE))
colnames(counts) <- barcodes$V1
# load spatial coordinates
coords <- read.csv(file.path(datadir,"/spatial//coords.csv"))
rownames(coords) <- coords[,1]; coords[,1] <- NULL
nUMI <- colSums(counts) # In this case, total counts per pixel is nUMI
puck <- SpatialRNA(coords, counts, nUMI)
barcodes <- colnames(puck@counts) # pixels to be used (a list of barcode names).
plot_puck_continuous(puck, barcodes, puck@nUMI, size = 1, ylimit = c(0,round(quantile(puck@nUMI,0.9))), title ='plot of nUMI')
library(SeuratData)
library(Seurat)
install.packages("Seurat")
library(spacexr)
library(Matrix)
library(doParallel)
library(ggplot2)
library(Seurat)
library(patchwork)
library(dplyr)
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry'
list.files(data_dir
counts <- read.csv(file.path(refdir,"counts.csv")) # load in cell types)
list.files(data_dir)
if (FALSE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
Load10X_Spatial(data.dir = data_dir)
}
if (FALSE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
Load10X_Spatial(data.dir = data_dir)
}
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
Load10X_Spatial(data.dir = data_dir)
}
install.packages("hd5r")
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
Load10X_Spatial(data.dir = data_dir)
}
install.packages("hdf5r")
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
Load10X_Spatial(data.dir = data_dir)
}
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
brain <- Load10X_Spatial(data.dir = data_dir)
if (FALSE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
brain <- Load10X_Spatial(data.dir = data_dir)
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
brain <- Load10X_Spatial(data.dir = data_dir) }
title: "Visium Deconvolution"
title: "Visium Deconvolution"
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
brain <- Load10X_Spatial(data.dir = data_dir) }
clc
clear
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
brain <- Load10X_Spatial(data.dir = data_dir, type = "test") }
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
brain <- Load10X_Spatial(data.dir = data_dir) }
title: "Visium Deconvolution"
title: "Visium_Deconvolution"
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
cache = TRUE,
out.width = "100%"
)
library(spacexr)
library(Matrix)
library(doParallel)
library(ggplot2)
library(Seurat)
library(patchwork)
library(dplyr)
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
brain <- Load10X_Spatial(data.dir = data_dir) }
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial") + theme(legend.position = "right")
wrap_plots(plot1, plot2)
brain <- SCTransform(brain, assay = "Spatial", verbose = FALSE)
SpatialFeaturePlot(brain, features = c("Hpca", "Ttr"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
cache = TRUE,
out.width = "100%"
)
library(spacexr)
library(Matrix)
library(doParallel)
library(ggplot2)
library(Seurat)
library(patchwork)
library(dplyr)
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
brain <- Load10X_Spatial(data.dir = data_dir) }
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial") + theme(legend.position = "right")
wrap_plots(plot1, plot2)
# Use sctransform to normalize counts
brain <- SCTransform(brain, assay = "Spatial", verbose = FALSE)
# Use sctransform to normalize counts
brain <- SCTransform(brain, assay = "Spatial", verbose = FALSE)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.05, pt.alpha = 0.5) + NoLegend()
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.05, alpha = 0.5) + NoLegend()
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.05, alpha = 0.5) + NoLegend()
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.05) + NoLegend()
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.05) + NoLegend()
if (TRUE) {
data_dir <- 'G:\\My Drive\\#Projects\\Project_Behavioral-Genomics\\Experiment Library\\Visium Data\\2022_10_23_behavioral_genomics_control_slide\\Data - Processed\\3172-RL-LC-Sham+CNO_R-Hemi_qc004_SI-TT-A4_w_mCherry\\outs'
list.files(data_dir) # Should show filtered_feature_bc_matrix.h5
brain <- Load10X_Spatial(data.dir = data_dir) }
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.05) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial") + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1, alpha = 1) + NoLegend()
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1, pt.alpha = 1) + NoLegend()
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial") + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size.factor = 0.1) + NoLegend()
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial") + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1, alpha = c(1, 1)) + NoLegend()
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", pt.size.factor = 0.8, alpha = 0.5, + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", pt.size.factor = 0.8, alpha = c(0.5, 0.5), + theme(legend.position = "right")
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", pt.size.factor = 0.8, alpha = c(0.5, 0.5)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", pt.size.factor = 0.1, alpha = c(0.5, 0.5)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", pt.size.factor = 0.9, alpha = c(0.5, 0.5)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", pt.size.factor = 1.2, alpha = c(0.5, 0.5)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.5, 0.5)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.3, 0.3)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.6, 0.3)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.6, 1)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(1, 0.6)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.7, 0.6)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.6, 0.6)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot1 <- VlnPlot(brain, features = "nCount_Spatial", pt.size = 0.1) + NoLegend()
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.5, 0.5)) + theme(legend.position = "right")
wrap_plots(plot1, plot2)
plot2
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.5, 0.5))
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.5, 0.5))
plot2
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.5, 0.5), label=FALSE)
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.5, 0.5))
plot2
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.5, 0.5), label=FALSE)
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.5, 0.5), label.box=FALSE)
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.5, 0.5))
plot2
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.1, 0.6))
plot2
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.1, 0.8))
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.1, 0.8))
plot2
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", pt.size.factor = 1,alpha = c(0.1, 0.8))
plot2
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.1, 0.8))
plot2
plot2 <- SpatialFeaturePlot(brain, features = "nCount_Spatial", alpha = c(0.2, 0.8))
plot2
# Use sctransform to normalize counts
brain <- SCTransform(brain, assay = "Spatial", verbose = FALSE)
SpatialFeaturePlot(brain, features = c("Hpca", "Ttr"))
brain <- RunPCA(brain, assay = "SCT", verbose = FALSE)
brain <- FindNeighbors(brain, reduction = "pca", dims = 1:30)
brain <- RunPCA(brain, assay = "SCT", verbose = FALSE)
brain <- FindNeighbors(brain, reduction = "pca", dims = 1:30)
install.packages(c("gh", "RcppArmadillo"))
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
cache = TRUE,
out.width = "100%"
)
brain <- FindNeighbors(brain, reduction = "pca", dims = 1:30)
brain <- RunPCA(brain, assay = "SCT", verbose = FALSE)
brain <- RunPCA(brain, assay = "SCT", verbose = FALSE)
SpatialFeaturePlot(brain, features = c("Hpca", "Ttr"))
library(spacexr)
library(Matrix)
install.packages("Matrix")
library(Seurat)
install.packages("vctrs")
knitr::opts_chunk$set(echo = TRUE)
## Load necessary libraries
library(spacexr)
library(Matrix)
library(doParallel)
library(ggplot2)
install.packages("rlang")
install.packages("vctrs")
install.packages(c("cli", "covr", "dplyr", "fastmap", "hms", "htmltools", "igraph", "ps", "spatstat.explore", "spatstat.geom", "spatstat.random", "spatstat.sparse", "spatstat.utils", "spelling", "testthat", "tibble", "xfun"))
install.packages("cli")
install.packages("cli")
# Written by CS 2023
#'''Code to look at and interpret hashing results for experiments that use nuclear oligo hashing'''
setwd("B:/GitHub/behavioral_genomics/hash_ladder")
suppressPackageStartupMessages({
library(MASS)
library(reshape2)
library(VGAM)
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
library(Matrix)
library(IRdisplay)
library(tibble)
library(ggridges)
library(monocle3)
})
install.packages("VGAM")
suppressPackageStartupMessages({
library(MASS)
library(reshape2)
library(VGAM)
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
library(Matrix)
library(IRdisplay)
library(tibble)
library(ggridges)
library(monocle3)
})
install.packages("IRdisplay")
library(dplyr)
suppressPackageStartupMessages({
library(MASS)
library(reshape2)
library(VGAM)
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
library(Matrix)
library(IRdisplay)
library(tibble)
library(ggridges)
library(monocle3)
})
wd = getwd()
wd
file.path(wd,"house")
